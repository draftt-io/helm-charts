apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "draftt-k8s-explorer.fullname" . }}
  namespace: {{ .Values.appConfig.namespace | default .Release.Namespace }}
  labels:
    {{- include "draftt-explorer.labels" . | nindent 4 }}
    {{ if .Values.cronjob.labels }}
      {{- toYaml .Values.cronjob.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.cronjob.annotations }}
      {{- toYaml .Values.cronjob.annotations | nindent 4 }}
    {{- end }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  failedJobsHistoryLimit: {{ default 3 .Values.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ default 1 .Values.cronjob.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.cronjob.maxRetries }}
      template:
        metadata:
          labels:
            {{- include "draftt-explorer.labels" . | nindent 12 }}
            {{- if .Values.cronjob.labels }}
              {{- toYaml .Values.cronjob.labels | nindent 12 }}
            {{- end }}
          annotations:
            {{- if .Values.cronjob.annotations }}
              {{- toYaml .Values.cronjob.annotations | nindent 12 }}
            {{- end }}
        spec:
          {{- if .Values.image.pullSecrets }}
          imagePullSecrets:
          {{- toYaml .Values.image.pullSecrets | nindent 12 }}
          {{- end }}
          serviceAccountName: {{ include "draftt-k8s-explorer.serviceAccountName" . }}
          containers:
          - name: draftt-k8s-explorer
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            resources:
              {{- toYaml .Values.resources | nindent 14 }}
            env:
              # Environment variables based on the appConfig
              - name: DRAFTT_COMPONENT_IDENTIFIER
                value: "{{ tpl .Values.appConfig.clusterIdentifier . }}"
              {{- if .Values.appConfig.api.drafttApiUrl }}
              - name: DRAFTT_API_ENDPOINT
                value: "{{ .Values.appConfig.api.drafttApiUrl }}"
              {{- end }}
              {{- if .Values.appConfig.api.drafttApiToken }}
              - name: DRAFTT_API_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.appConfig.api.drafttApiToken.secretName }}"
                    key: "{{ .Values.appConfig.api.drafttApiToken.secretKey }}"
              {{- end }}
              {{- if .Values.appConfig.s3Mode.enabled }}
              {{- if .Values.appConfig.s3Mode.region }}
              - name: AWS_REGION
                value: "{{ .Values.appConfig.s3Mode.region }}"
              {{- end }}
              {{- if .Values.appConfig.s3Mode.accessKeyId }}
              - name: AWS_ACCESS_KEY_ID
                value: "{{ .Values.appConfig.s3Mode.accessKeyId }}"
              {{- end }}
              {{- if .Values.appConfig.s3Mode.secretAccessKey }}
              - name: AWS_SECRET_ACCESS_KEY
                value: "{{ .Values.appConfig.s3Mode.secretAccessKey }}"
              {{- end }}
              {{- if .Values.appConfig.s3Mode.bucketName }}
              - name: S3_BUCKET_NAME
                value: "{{ .Values.appConfig.s3Mode.bucketName }}"
              {{- end }}
              {{- if and .Values.appConfig.s3Mode.endpoint (not (eq .Values.appConfig.s3Mode.endpoint "")) }}
              - name: S3_ENDPOINT
                value: "{{ .Values.appConfig.s3Mode.endpoint }}"
              {{- end }}
              {{- end }}
          restartPolicy: {{ default "OnFailure" .Values.cronjob.restartPolicy }}
          {{- if .Values.cronjob.nodeSelector }}
          nodeSelector: {{ .Values.cronjob.nodeSelector | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.cronjob.tolerations }}
          tolerations:
            {{- toYaml .Values.cronjob.tolerations | nindent 12 }}
          {{- end }}
          {{- if .Values.cronjob.affinity }}
          affinity:
            {{- toYaml .Values.cronjob.affinity | nindent 12 }}
          {{- end }}
