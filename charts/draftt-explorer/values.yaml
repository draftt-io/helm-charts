## Draftt explorer configuration

# -- Common labels to be added to all resources
commonLabels: {}
# -- Override the chart name
nameOverride: ""

## Draftt explorer image
image:
  # -- Repository to use for the Draftt explorer
  repository: public.ecr.aws/draftt-io/draftt-explorer
  # -- Tag to use for the Draftt explorer
  tag: 0.0.1
  # -- Image pull policy to use for the Draftt explorer
  pullPolicy: Always
  # -- Pull secrets to pull images from a private registry
  pullSecrets: []

## Draftt explorer cronjob configuration
cronjob:
  # -- cronjob timing config, you can build it at: https://crontab.guru
  # <br> **Note**: Retaining the default value of every 8 hours is advised for best performance. 
  # Can be adjusted if needed.
  schedule: "0 */8 * * *"
  # -- the maximum number of retries for the cronjob before it is marked as failed
  maxRetries: 3
  # -- The restart policy for the cronjob pod
  restartPolicy: "OnFailure"
  # -- The number of successful jobs to keep in the history. Older successful jobs beyond this limit are automatically deleted.
  successfulJobsHistoryLimit: 1
  # -- The number of failed jobs to keep in the history. Older failed jobs beyond this limit are automatically deleted.
  failedJobsHistoryLimit: 3
  # -- Labels to be added to the cronjob
  labels: {}
  # -- Annotations to be added to the cronjob
  annotations: {}
  # -- Node selector for the cronjob
  nodeSelector: {}
  # -- Tolerations for the cronjob
  tolerations: []
  # -- Affinity for the cronjob
  affinity: {}

## Resources configuration
resources:
  # -- Resource requests for the draftt explorer
  requests:
    cpu: 100m
    memory: 256Mi
  
## Draftt explorer configuration
appConfig:
  # -- The namespace that all resources will be deployed on
  # @default -- `.Release.Namespace`
  namespace: ""
  # -- The cluster identifier, you can get it from the cluster overview page in the draftt console.
  # <br> **Note**: for the integration to work correctly, the exact cluster identifier must be provided.
  clusterIdentifier: ""
  ## S3 mode configuration
  s3Mode:
    # -- Whether to enable S3 mode
    enabled: false
    # -- The S3 endpoint
    endpoint: ""
    # -- The S3 bucket name
    bucketName: ""
    # -- The AWS region
    region: ""
    # -- The AWS access key ID
    accessKeyId: ""
    # -- The AWS secret access key
    secretAccessKey: ""
  ## Draftt API configuration
  api:
    # -- The draftt API URL
    drafttApiUrl: "https://api.draftt.io/component/k8s"
    # -- The draftt API token secret.
    # A k8s generic secret should be created according to the draftt integration setup instructions.
    # <br> **Note**: Make sure the secret is created in the same namespace as the draftt explorer and the secret name and key are as specified in the values.yaml file.
    drafttApiToken:
      # -- The name of the secret
      secretName: "draftt-api-token"
      # -- The key of the secret
      secretKey: "drafttApiToken"

## RBAC configuration
rbac:
  # -- Whether to create rbac resources
  # <br> **Note**: When set to true, the following rbac resources will be created:
  # <br>- cluster role
  # <br>- cluster role binding
  create: true
  # -- Labels to be added to rbac resources
  labels: {}
  # -- Annotations to be added to rbac resources
  annotations: {}

## Service account configuration
serviceAccount:
  # -- Whether to create a service account.
  # <br> **Note**: if you are using an existing service account, set this to false and provide the service account name in the name field.
  create: true
  # -- The name of the service account.
  # <br> If not set, and `serviceAccount.create` is true, a service account is created automatically using the fullname template.
  name: ""
  # -- Annotations to be added to service account
  annotations: {}
  # -- Labels to be added to service account
  labels: {}
  annotations:
    eks.amazonaws.com/role-arn: "test"

clusterRole:
  labels: {}
  annotations: {}

clusterRoleBinding:
  labels: {}