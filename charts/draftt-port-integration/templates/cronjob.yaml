apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "draftt-port-integration.fullname" . }}
  namespace: {{ .Values.appConfig.namespace }}
  labels:
    {{- include "draftt-port-integration.labels" . | nindent 4 }}
    {{ if .Values.cronjob.labels }}
      {{- toYaml .Values.cronjob.labels | nindent 4 }}
    {{- end }}
  annotations:
    {{- if .Values.cronjob.annotations }}
      {{- toYaml .Values.cronjob.annotations | nindent 4 }}
    {{- end }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  failedJobsHistoryLimit: {{ default 3 .Values.cronjob.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ default 1 .Values.cronjob.successfulJobsHistoryLimit }}
  jobTemplate:
    spec:
      backoffLimit: {{ .Values.cronjob.maxRetries }}
      {{- if .Values.cronjob.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml .Values.cronjob.image.pullSecrets | nindent 8 }}
      {{- end }}
      template:
        metadata:
          labels:
            {{- include "draftt-port-integration.labels" . | nindent 12 }}
            {{- if .Values.cronjob.labels }}
              {{- toYaml .Values.cronjob.labels | nindent 12 }}
            {{- end }}
          annotations:
            {{- if .Values.cronjob.annotations }}
              {{- toYaml .Values.cronjob.annotations | nindent 12 }}
            {{- end }}
        spec:
          containers:
          - name: draftt-port-integration
            image: "{{ .Values.cronjob.image.repository }}:{{ .Values.cronjob.image.tag }}"
            imagePullPolicy: {{ .Values.cronjob.image.pullPolicy }}
            resources:
              {{- toYaml .Values.cronjob.resources | nindent 14 }}
            env:
              - name: OCEAN__PORT__CLIENT_ID
                value: "{{ .Values.appConfig.port.clientId }}"
              - name: OCEAN__PORT__CLIENT_SECRET
                value: "{{ .Values.appConfig.port.clientSecret }}"
              - name: OCEAN__PORT__BASE_URL
                value: "{{ .Values.appConfig.port.baseUrl }}"
              - name: OCEAN__INTEGRATION__IDENTIFIER
                value: "{{ .Values.appConfig.integration.identifier }}"
              - name: OCEAN__EVENT_LISTENER__TYPE
                value: "{{ .Values.appConfig.port.eventListenerType }}"
              - name: OCEAN__INITIALIZE_PORT_RESOURCES
                value: "{{ .Values.appConfig.port.initializePortResources }}"
              {{- if .Values.appConfig.draftt.drafttApiToken }}
              - name: OCEAN__INTEGRATION__CONFIG__DRAFTT_API_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: "{{ .Values.appConfig.draftt.drafttApiToken.secretName }}"
                    key: "{{ .Values.appConfig.draftt.drafttApiToken.secretKey }}"
              {{- end }}
          restartPolicy: {{ default "OnFailure" .Values.cronjob.restartPolicy }}
          {{- if .Values.cronjob.nodeSelector }}
          nodeSelector: {{ .Values.cronjob.nodeSelector | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.cronjob.tolerations }}
          tolerations:
            {{- toYaml .Values.cronjob.tolerations | nindent 12 }}
          {{- end }}
          {{- if .Values.cronjob.affinity }}
          affinity:
            {{- toYaml .Values.cronjob.affinity | nindent 12 }}
          {{- end }}
